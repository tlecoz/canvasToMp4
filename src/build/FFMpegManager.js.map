{"version":3,"file":"FFMpegManager.js","sourceRoot":"","sources":["../FFMpegManager.ts"],"names":[],"mappings":"AAAA,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE7C,mBAAoB,SAAQ,eAAe;IAOzC,YAAY,SAAW,IAAI;QACzB,KAAK,EAAE,CAAC;QAJA,SAAI,GAAU,EAAE,CAAC;QAKzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,KAAY,EAAC,MAAa,EAAC,GAAU,EAAC,WAAgB,WAAW;QAC5E,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAC,IAAI,aAAa,CAAC,KAAK,EAAC,MAAM,EAAC,GAAG,EAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAC,UAAS,IAAI;YACzC,EAAE,CAAC,OAAO,GAAG,uBAAuB,GAAE,IAAI,GAAE,IAAI,CAAC;YACjD,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC;YACxB,IAAG,EAAE,CAAC,MAAM;gBAAE,EAAE,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC,OAAO,CAAC;YAChD,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC;IAEM,GAAG,KAAS,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAA,CAAC;IAEtC,eAAe,CAAC,GAA4B;QACjD,IAAG,GAAG,IAAI,IAAI,CAAC,OAAO,EAAC;YAErB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1B,IAAI,KAAK,GAAqB,GAAG,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC7D,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAQ,EAAC,GAAG,GAAU,MAAM,CAAC,MAAM,CAAC;YACxC,KAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,EAAC,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC;SACvD;IACH,CAAC;IAEM,YAAY,CAAC,GAAyB;QAC3C,IAAG,GAAG,IAAI,IAAI,CAAC,OAAO,EAAC;YAErB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1B,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YAEhE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC;SACvD;IACH,CAAC;CAIF","sourcesContent":["var child_process = require(\"child_process\");\r\n\r\nclass FFMpegManager extends EventDispatcher {\r\n\r\n  public static ON_LOG:string;\r\n  protected process:any;\r\n  protected logs:string = \"\";\r\n  protected lastLog:string;\r\n  protected logDiv:any;\r\n  constructor(logDiv:any=null){\r\n    super();\r\n    this.logDiv = logDiv;\r\n  }\r\n\r\n  public start(width:number,height:number,fps:number,filename:string=\"video.mp4\"){\r\n    var th = this;\r\n    this.process = child_process.spawn(\"ffmpeg\",new FFmpegOptions(width,height,fps,filename).values);\r\n    this.process.stderr.on('data',function(data){\r\n      th.lastLog = 'ffmpeg stderr data = '+ data +\"\\n\";\r\n      th.logs += this.lastLog;\r\n      if(th.logDiv) th.logDiv.innerText += th.lastLog;\r\n      th.dispatchEvent(FFMpegManager.ON_LOG);\r\n    })\r\n  }\r\n\r\n  public end():void{ this.process.stdin.end();}\r\n\r\n  public canvas2dToVideo(ctx:CanvasRenderingContext2D):void{\r\n    if(ctx && this.process){\r\n\r\n      var w = ctx.canvas.width;\r\n      var h = ctx.canvas.height;\r\n      var input:Uint8ClampedArray = ctx.getImageData(0,0,w,h).data;\r\n      var pixels = new Uint8Array(w*h*4);\r\n      let i:number,len:number = pixels.length;\r\n      for(i=0;i<len;i++) pixels[i] = input[i];\r\n\r\n      this.process.stdin.write(new Buffer(pixels,\"binary\"));\r\n    }\r\n  }\r\n\r\n  public webglToVideo(ctx:WebGLRenderingContext):void{\r\n    if(ctx && this.process){\r\n\r\n      var w = ctx.canvas.width;\r\n      var h = ctx.canvas.height;\r\n      var pixels = new Uint8Array(w * h * 4);\r\n      ctx.readPixels(0, 0, w, h, ctx.RGBA, ctx.UNSIGNED_BYTE, pixels);\r\n\r\n      this.process.stdin.write(new Buffer(pixels,\"binary\"));\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n"]}